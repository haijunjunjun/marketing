buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://maven.oschina.net/content/groups/public/' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	mybatisGenerator
}
def getDbProperties = {
	def properties = new Properties()
	file("src/main/resources/mybatis/config.properties").withInputStream { inputStream ->
		properties.load(inputStream)
	}
	properties
}
task mybatisGenerate << {
	def properties = getDbProperties()
	ant.properties['targetProject'] = projectDir.path
	ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
	ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
	ant.properties['userId'] = properties.getProperty("jdbc.username")
	ant.properties['password'] = properties.getProperty("jdbc.password")
	ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
	ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
	ant.properties['modelPackage'] = properties.getProperty("package.model")
	ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
	ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
	ant.taskdef(
			name: 'mbgenerator',
			classname: 'org.mybatis.generator.ant.GeneratorAntTask',
			classpath: configurations.mybatisGenerator.asPath
	)
	ant.mbgenerator(overwrite: true,
			configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
		propertyset {
			propertyref(name: 'targetProject')
			propertyref(name: 'userId')
			propertyref(name: 'driverClass')
			propertyref(name: 'connectionURL')
			propertyref(name: 'password')
			propertyref(name: 'src_main_java')
			propertyref(name: 'src_main_resources')
			propertyref(name: 'modelPackage')
			propertyref(name: 'mapperPackage')
			propertyref(name: 'sqlMapperPackage')
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
	compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
	compile group: 'com.github.pagehelper', name: 'pagehelper', version: '4.2.1'
	compile ('tk.mybatis:mapper:3.3.9')

	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
	mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
	mybatisGenerator 'tk.mybatis:mapper:3.3.9'

	compile group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
	compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.2'

	compile group: 'org.projectlombok', name: 'lombok', version: '1.18.0'

	//连接数据，设置依赖包
	compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
	//@mapperScan 注解的依赖包
	compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.5.RELEASE'
	compile group: 'com.zaxxer', name: 'HikariCP', version: '3.1.0'
	compile group: 'org.springframework.session', name: 'spring-session', version: '1.3.3.RELEASE'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'
}
