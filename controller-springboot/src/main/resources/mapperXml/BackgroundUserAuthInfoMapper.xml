<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.marketing.controller.controller.dal.mapper.BackgroundUserAuthInfoMapper" >
  <resultMap id="BaseResultMap" type="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="page_interface" property="pageInterface" jdbcType="VARCHAR" />
    <result column="back_role_ids" property="backRoleIds" jdbcType="VARCHAR" />
    <result column="page_desc" property="pageDesc" jdbcType="VARCHAR" />
    <result column="create_name" property="createName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, page_interface, back_role_ids, page_desc, create_name, create_time, modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from background_user_auth_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from background_user_auth_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from background_user_auth_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfoExample" >
    delete from background_user_auth_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into background_user_auth_info (page_interface, back_role_ids, page_desc, 
      create_name, create_time, modify_time
      )
    values (#{pageInterface,jdbcType=VARCHAR}, #{backRoleIds,jdbcType=VARCHAR}, #{pageDesc,jdbcType=VARCHAR}, 
      #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into background_user_auth_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pageInterface != null" >
        page_interface,
      </if>
      <if test="backRoleIds != null" >
        back_role_ids,
      </if>
      <if test="pageDesc != null" >
        page_desc,
      </if>
      <if test="createName != null" >
        create_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pageInterface != null" >
        #{pageInterface,jdbcType=VARCHAR},
      </if>
      <if test="backRoleIds != null" >
        #{backRoleIds,jdbcType=VARCHAR},
      </if>
      <if test="pageDesc != null" >
        #{pageDesc,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfoExample" resultType="java.lang.Integer" >
    select count(*) from background_user_auth_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update background_user_auth_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pageInterface != null" >
        page_interface = #{record.pageInterface,jdbcType=VARCHAR},
      </if>
      <if test="record.backRoleIds != null" >
        back_role_ids = #{record.backRoleIds,jdbcType=VARCHAR},
      </if>
      <if test="record.pageDesc != null" >
        page_desc = #{record.pageDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createName != null" >
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update background_user_auth_info
    set id = #{record.id,jdbcType=INTEGER},
      page_interface = #{record.pageInterface,jdbcType=VARCHAR},
      back_role_ids = #{record.backRoleIds,jdbcType=VARCHAR},
      page_desc = #{record.pageDesc,jdbcType=VARCHAR},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfo" >
    update background_user_auth_info
    <set >
      <if test="pageInterface != null" >
        page_interface = #{pageInterface,jdbcType=VARCHAR},
      </if>
      <if test="backRoleIds != null" >
        back_role_ids = #{backRoleIds,jdbcType=VARCHAR},
      </if>
      <if test="pageDesc != null" >
        page_desc = #{pageDesc,jdbcType=VARCHAR},
      </if>
      <if test="createName != null" >
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.marketing.controller.controller.dal.model.BackgroundUserAuthInfo" >
    update background_user_auth_info
    set page_interface = #{pageInterface,jdbcType=VARCHAR},
      back_role_ids = #{backRoleIds,jdbcType=VARCHAR},
      page_desc = #{pageDesc,jdbcType=VARCHAR},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>