<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.marketing.controller.controller.dal.mapper.UserReceiptApplyMapper" >
  <resultMap id="BaseResultMap" type="com.niule.marketing.controller.controller.dal.model.UserReceiptApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="apply_user_name" property="applyUserName" jdbcType="VARCHAR" />
    <result column="apply_user_phone" property="applyUserPhone" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="duty_paragraph" property="dutyParagraph" jdbcType="VARCHAR" />
    <result column="receipt_title" property="receiptTitle" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="certificate_no" property="certificateNo" jdbcType="VARCHAR" />
    <result column="refuse_reason" property="refuseReason" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, cust_id, apply_user_name, apply_user_phone, company_name, duty_paragraph, 
    receipt_title, apply_time, status, certificate_no, refuse_reason, price, create_time, 
    modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_receipt_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_receipt_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_receipt_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApplyExample" >
    delete from user_receipt_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_receipt_apply (user_id, cust_id, apply_user_name, 
      apply_user_phone, company_name, duty_paragraph, 
      receipt_title, apply_time, status, 
      certificate_no, refuse_reason, price, 
      create_time, modify_time)
    values (#{userId,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{applyUserName,jdbcType=VARCHAR}, 
      #{applyUserPhone,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{dutyParagraph,jdbcType=VARCHAR}, 
      #{receiptTitle,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{certificateNo,jdbcType=VARCHAR}, #{refuseReason,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApply" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_receipt_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="applyUserName != null" >
        apply_user_name,
      </if>
      <if test="applyUserPhone != null" >
        apply_user_phone,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="dutyParagraph != null" >
        duty_paragraph,
      </if>
      <if test="receiptTitle != null" >
        receipt_title,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="certificateNo != null" >
        certificate_no,
      </if>
      <if test="refuseReason != null" >
        refuse_reason,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="applyUserName != null" >
        #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="applyUserPhone != null" >
        #{applyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="dutyParagraph != null" >
        #{dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="receiptTitle != null" >
        #{receiptTitle,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null" >
        #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApplyExample" resultType="java.lang.Integer" >
    select count(*) from user_receipt_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_receipt_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.custId != null" >
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.applyUserName != null" >
        apply_user_name = #{record.applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyUserPhone != null" >
        apply_user_phone = #{record.applyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyParagraph != null" >
        duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptTitle != null" >
        receipt_title = #{record.receiptTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.certificateNo != null" >
        certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refuseReason != null" >
        refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_receipt_apply
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      cust_id = #{record.custId,jdbcType=INTEGER},
      apply_user_name = #{record.applyUserName,jdbcType=VARCHAR},
      apply_user_phone = #{record.applyUserPhone,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      duty_paragraph = #{record.dutyParagraph,jdbcType=VARCHAR},
      receipt_title = #{record.receiptTitle,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      certificate_no = #{record.certificateNo,jdbcType=VARCHAR},
      refuse_reason = #{record.refuseReason,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApply" >
    update user_receipt_apply
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="applyUserName != null" >
        apply_user_name = #{applyUserName,jdbcType=VARCHAR},
      </if>
      <if test="applyUserPhone != null" >
        apply_user_phone = #{applyUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="dutyParagraph != null" >
        duty_paragraph = #{dutyParagraph,jdbcType=VARCHAR},
      </if>
      <if test="receiptTitle != null" >
        receipt_title = #{receiptTitle,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null" >
        certificate_no = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null" >
        refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.marketing.controller.controller.dal.model.UserReceiptApply" >
    update user_receipt_apply
    set user_id = #{userId,jdbcType=INTEGER},
      cust_id = #{custId,jdbcType=INTEGER},
      apply_user_name = #{applyUserName,jdbcType=VARCHAR},
      apply_user_phone = #{applyUserPhone,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      duty_paragraph = #{dutyParagraph,jdbcType=VARCHAR},
      receipt_title = #{receiptTitle,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      certificate_no = #{certificateNo,jdbcType=VARCHAR},
      refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>