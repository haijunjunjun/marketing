<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.marketing.controller.controller.dal.mapper.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.niule.marketing.controller.controller.dal.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="manage_id" property="manageId" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="manage_level" property="manageLevel" jdbcType="VARCHAR" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="awater_img_url" property="awaterImgUrl" jdbcType="VARCHAR" />
    <result column="card_positive_img_url" property="cardPositiveImgUrl" jdbcType="VARCHAR" />
    <result column="card_oppositive_img_url" property="cardOppositiveImgUrl" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, password, phone, role_id, real_name, sex, create_time, status, open_id, manage_id, 
    image_url, level, login_count, manage_level, area, city, card_no, awater_img_url, 
    card_positive_img_url, card_oppositive_img_url, job_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (password, phone, role_id, 
      real_name, sex, create_time, 
      status, open_id, manage_id, 
      image_url, level, login_count, 
      manage_level, area, city, 
      card_no, awater_img_url, card_positive_img_url, 
      card_oppositive_img_url, job_status)
    values (#{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR}, #{manageId,jdbcType=INTEGER}, 
      #{imageUrl,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, #{loginCount,jdbcType=INTEGER}, 
      #{manageLevel,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{cardNo,jdbcType=VARCHAR}, #{awaterImgUrl,jdbcType=VARCHAR}, #{cardPositiveImgUrl,jdbcType=VARCHAR}, 
      #{cardOppositiveImgUrl,jdbcType=VARCHAR}, #{jobStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="manageId != null" >
        manage_id,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="manageLevel != null" >
        manage_level,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="cardNo != null" >
        card_no,
      </if>
      <if test="awaterImgUrl != null" >
        awater_img_url,
      </if>
      <if test="cardPositiveImgUrl != null" >
        card_positive_img_url,
      </if>
      <if test="cardOppositiveImgUrl != null" >
        card_oppositive_img_url,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null" >
        #{manageId,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="manageLevel != null" >
        #{manageLevel,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="awaterImgUrl != null" >
        #{awaterImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="cardPositiveImgUrl != null" >
        #{cardPositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="cardOppositiveImgUrl != null" >
        #{cardOppositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.manageId != null" >
        manage_id = #{record.manageId,jdbcType=INTEGER},
      </if>
      <if test="record.imageUrl != null" >
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.loginCount != null" >
        login_count = #{record.loginCount,jdbcType=INTEGER},
      </if>
      <if test="record.manageLevel != null" >
        manage_level = #{record.manageLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null" >
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.awaterImgUrl != null" >
        awater_img_url = #{record.awaterImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.cardPositiveImgUrl != null" >
        card_positive_img_url = #{record.cardPositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.cardOppositiveImgUrl != null" >
        card_oppositive_img_url = #{record.cardOppositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null" >
        job_status = #{record.jobStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set id = #{record.id,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      open_id = #{record.openId,jdbcType=VARCHAR},
      manage_id = #{record.manageId,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      login_count = #{record.loginCount,jdbcType=INTEGER},
      manage_level = #{record.manageLevel,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      awater_img_url = #{record.awaterImgUrl,jdbcType=VARCHAR},
      card_positive_img_url = #{record.cardPositiveImgUrl,jdbcType=VARCHAR},
      card_oppositive_img_url = #{record.cardOppositiveImgUrl,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfo" >
    update user_info
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="manageId != null" >
        manage_id = #{manageId,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="manageLevel != null" >
        manage_level = #{manageLevel,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="awaterImgUrl != null" >
        awater_img_url = #{awaterImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="cardPositiveImgUrl != null" >
        card_positive_img_url = #{cardPositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="cardOppositiveImgUrl != null" >
        card_oppositive_img_url = #{cardOppositiveImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfo" >
    update user_info
    set password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR},
      manage_id = #{manageId,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      manage_level = #{manageLevel,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      awater_img_url = #{awaterImgUrl,jdbcType=VARCHAR},
      card_positive_img_url = #{cardPositiveImgUrl,jdbcType=VARCHAR},
      card_oppositive_img_url = #{cardOppositiveImgUrl,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getMaxUserId" resultType="java.lang.Integer">
    select max(id) from user_info
  </select>
  <select id="fetchUserInfoByStatus" resultMap="BaseResultMap">
    select * from user_info where role_id != 1
  </select>
  <select id="getUserTeamInfo" resultMap="BaseResultMap" parameterType="com.niule.marketing.controller.controller.dal.model.UserInfo">
    select * from user_info WHERE FIND_IN_SET(id,getParLst(#{userId}))
  </select>
</mapper>