<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.niule.marketing.control.dal.mapper.CustomerInfoMapper">
    <resultMap id="BaseResultMap" type="com.niule.marketing.control.dal.model.CustomerInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="company_type" property="companyType" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="cust_name" property="custName" jdbcType="VARCHAR"/>
        <result column="cust_phone" property="custPhone" jdbcType="VARCHAR"/>
        <result column="company_addr" property="companyAddr" jdbcType="VARCHAR"/>
        <result column="repo_time" property="repoTime" jdbcType="TIMESTAMP"/>
        <result column="check_time" property="checkTime" jdbcType="TIMESTAMP"/>
        <result column="compact_time" property="compactTime" jdbcType="TIMESTAMP"/>
        <result column="abandon_time" property="abandonTime" jdbcType="TIMESTAMP"/>
        <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="is_phone" property="isPhone" jdbcType="INTEGER"/>
        <result column="is_visit" property="isVisit" jdbcType="INTEGER"/>
        <result column="is_gold_beans" property="isGoldBeans" jdbcType="INTEGER"/>
        <result column="is_compact" property="isCompact" jdbcType="INTEGER"/>
        <result column="is_compact_check" property="isCompactCheck" jdbcType="INTEGER"/>
        <result column="is_money" property="isMoney" jdbcType="INTEGER"/>
        <result column="is_interest_cust" property="isInterestCust" jdbcType="INTEGER"/>
        <result column="compact_img" property="compactImg" jdbcType="VARCHAR"/>
        <result column="mark" property="mark" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="abandon_reason" property="abandonReason" jdbcType="VARCHAR"/>
        <result column="delete_reason" property="deleteReason" jdbcType="VARCHAR"/>
        <result column="check_refuse_reason" property="checkRefuseReason" jdbcType="VARCHAR"/>
        <result column="donate_gold_beans" property="donateGoldBeans" jdbcType="INTEGER"/>
        <result column="relative_id" property="relativeId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, company_name, company_type, status, cust_name, cust_phone, company_addr,
        repo_time, check_time, compact_time, abandon_time, delete_time, modify_time, is_phone,
        is_visit, is_gold_beans, is_compact, is_compact_check, is_money, is_interest_cust,
        compact_img, mark, price, abandon_reason, delete_reason, check_refuse_reason, donate_gold_beans,
        relative_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.niule.marketing.control.dal.model.CustomerInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from customer_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from customer_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from customer_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.niule.marketing.control.dal.model.CustomerInfoExample">
        delete from customer_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.niule.marketing.control.dal.model.CustomerInfo">
        insert into customer_info (id, user_id, company_name,
        company_type, status, cust_name,
        cust_phone, company_addr, repo_time,
        check_time, compact_time, abandon_time,
        delete_time, modify_time, is_phone,
        is_visit, is_gold_beans, is_compact,
        is_compact_check, is_money, is_interest_cust,
        compact_img, mark, price,
        abandon_reason, delete_reason, check_refuse_reason,
        donate_gold_beans, relative_id)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR},
        #{companyType,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{custName,jdbcType=VARCHAR},
        #{custPhone,jdbcType=VARCHAR}, #{companyAddr,jdbcType=VARCHAR}, #{repoTime,jdbcType=TIMESTAMP},
        #{checkTime,jdbcType=TIMESTAMP}, #{compactTime,jdbcType=TIMESTAMP}, #{abandonTime,jdbcType=TIMESTAMP},
        #{deleteTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{isPhone,jdbcType=INTEGER},
        #{isVisit,jdbcType=INTEGER}, #{isGoldBeans,jdbcType=INTEGER}, #{isCompact,jdbcType=INTEGER},
        #{isCompactCheck,jdbcType=INTEGER}, #{isMoney,jdbcType=INTEGER}, #{isInterestCust,jdbcType=INTEGER},
        #{compactImg,jdbcType=VARCHAR}, #{mark,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE},
        #{abandonReason,jdbcType=VARCHAR}, #{deleteReason,jdbcType=VARCHAR}, #{checkRefuseReason,jdbcType=VARCHAR},
        #{donateGoldBeans,jdbcType=INTEGER}, #{relativeId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.niule.marketing.control.dal.model.CustomerInfo">
        insert into customer_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
            <if test="companyType != null">
                company_type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="custName != null">
                cust_name,
            </if>
            <if test="custPhone != null">
                cust_phone,
            </if>
            <if test="companyAddr != null">
                company_addr,
            </if>
            <if test="repoTime != null">
                repo_time,
            </if>
            <if test="checkTime != null">
                check_time,
            </if>
            <if test="compactTime != null">
                compact_time,
            </if>
            <if test="abandonTime != null">
                abandon_time,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
            <if test="isPhone != null">
                is_phone,
            </if>
            <if test="isVisit != null">
                is_visit,
            </if>
            <if test="isGoldBeans != null">
                is_gold_beans,
            </if>
            <if test="isCompact != null">
                is_compact,
            </if>
            <if test="isCompactCheck != null">
                is_compact_check,
            </if>
            <if test="isMoney != null">
                is_money,
            </if>
            <if test="isInterestCust != null">
                is_interest_cust,
            </if>
            <if test="compactImg != null">
                compact_img,
            </if>
            <if test="mark != null">
                mark,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="abandonReason != null">
                abandon_reason,
            </if>
            <if test="deleteReason != null">
                delete_reason,
            </if>
            <if test="checkRefuseReason != null">
                check_refuse_reason,
            </if>
            <if test="donateGoldBeans != null">
                donate_gold_beans,
            </if>
            <if test="relativeId != null">
                relative_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyType != null">
                #{companyType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="custName != null">
                #{custName,jdbcType=VARCHAR},
            </if>
            <if test="custPhone != null">
                #{custPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyAddr != null">
                #{companyAddr,jdbcType=VARCHAR},
            </if>
            <if test="repoTime != null">
                #{repoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="checkTime != null">
                #{checkTime,jdbcType=TIMESTAMP},
            </if>
            <if test="compactTime != null">
                #{compactTime,jdbcType=TIMESTAMP},
            </if>
            <if test="abandonTime != null">
                #{abandonTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isPhone != null">
                #{isPhone,jdbcType=INTEGER},
            </if>
            <if test="isVisit != null">
                #{isVisit,jdbcType=INTEGER},
            </if>
            <if test="isGoldBeans != null">
                #{isGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="isCompact != null">
                #{isCompact,jdbcType=INTEGER},
            </if>
            <if test="isCompactCheck != null">
                #{isCompactCheck,jdbcType=INTEGER},
            </if>
            <if test="isMoney != null">
                #{isMoney,jdbcType=INTEGER},
            </if>
            <if test="isInterestCust != null">
                #{isInterestCust,jdbcType=INTEGER},
            </if>
            <if test="compactImg != null">
                #{compactImg,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="abandonReason != null">
                #{abandonReason,jdbcType=VARCHAR},
            </if>
            <if test="deleteReason != null">
                #{deleteReason,jdbcType=VARCHAR},
            </if>
            <if test="checkRefuseReason != null">
                #{checkRefuseReason,jdbcType=VARCHAR},
            </if>
            <if test="donateGoldBeans != null">
                #{donateGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="relativeId != null">
                #{relativeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.niule.marketing.control.dal.model.CustomerInfoExample"
            resultType="java.lang.Integer">
        select count(*) from customer_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update customer_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.companyName != null">
                company_name = #{record.companyName,jdbcType=VARCHAR},
            </if>
            <if test="record.companyType != null">
                company_type = #{record.companyType,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.custName != null">
                cust_name = #{record.custName,jdbcType=VARCHAR},
            </if>
            <if test="record.custPhone != null">
                cust_phone = #{record.custPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.companyAddr != null">
                company_addr = #{record.companyAddr,jdbcType=VARCHAR},
            </if>
            <if test="record.repoTime != null">
                repo_time = #{record.repoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.checkTime != null">
                check_time = #{record.checkTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.compactTime != null">
                compact_time = #{record.compactTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.abandonTime != null">
                abandon_time = #{record.abandonTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deleteTime != null">
                delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null">
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isPhone != null">
                is_phone = #{record.isPhone,jdbcType=INTEGER},
            </if>
            <if test="record.isVisit != null">
                is_visit = #{record.isVisit,jdbcType=INTEGER},
            </if>
            <if test="record.isGoldBeans != null">
                is_gold_beans = #{record.isGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="record.isCompact != null">
                is_compact = #{record.isCompact,jdbcType=INTEGER},
            </if>
            <if test="record.isCompactCheck != null">
                is_compact_check = #{record.isCompactCheck,jdbcType=INTEGER},
            </if>
            <if test="record.isMoney != null">
                is_money = #{record.isMoney,jdbcType=INTEGER},
            </if>
            <if test="record.isInterestCust != null">
                is_interest_cust = #{record.isInterestCust,jdbcType=INTEGER},
            </if>
            <if test="record.compactImg != null">
                compact_img = #{record.compactImg,jdbcType=VARCHAR},
            </if>
            <if test="record.mark != null">
                mark = #{record.mark,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DOUBLE},
            </if>
            <if test="record.abandonReason != null">
                abandon_reason = #{record.abandonReason,jdbcType=VARCHAR},
            </if>
            <if test="record.deleteReason != null">
                delete_reason = #{record.deleteReason,jdbcType=VARCHAR},
            </if>
            <if test="record.checkRefuseReason != null">
                check_refuse_reason = #{record.checkRefuseReason,jdbcType=VARCHAR},
            </if>
            <if test="record.donateGoldBeans != null">
                donate_gold_beans = #{record.donateGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="record.relativeId != null">
                relative_id = #{record.relativeId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update customer_info
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        company_name = #{record.companyName,jdbcType=VARCHAR},
        company_type = #{record.companyType,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        cust_name = #{record.custName,jdbcType=VARCHAR},
        cust_phone = #{record.custPhone,jdbcType=VARCHAR},
        company_addr = #{record.companyAddr,jdbcType=VARCHAR},
        repo_time = #{record.repoTime,jdbcType=TIMESTAMP},
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
        compact_time = #{record.compactTime,jdbcType=TIMESTAMP},
        abandon_time = #{record.abandonTime,jdbcType=TIMESTAMP},
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
        is_phone = #{record.isPhone,jdbcType=INTEGER},
        is_visit = #{record.isVisit,jdbcType=INTEGER},
        is_gold_beans = #{record.isGoldBeans,jdbcType=INTEGER},
        is_compact = #{record.isCompact,jdbcType=INTEGER},
        is_compact_check = #{record.isCompactCheck,jdbcType=INTEGER},
        is_money = #{record.isMoney,jdbcType=INTEGER},
        is_interest_cust = #{record.isInterestCust,jdbcType=INTEGER},
        compact_img = #{record.compactImg,jdbcType=VARCHAR},
        mark = #{record.mark,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DOUBLE},
        abandon_reason = #{record.abandonReason,jdbcType=VARCHAR},
        delete_reason = #{record.deleteReason,jdbcType=VARCHAR},
        check_refuse_reason = #{record.checkRefuseReason,jdbcType=VARCHAR},
        donate_gold_beans = #{record.donateGoldBeans,jdbcType=INTEGER},
        relative_id = #{record.relativeId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.niule.marketing.control.dal.model.CustomerInfo">
        update customer_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="companyName != null">
                company_name = #{companyName,jdbcType=VARCHAR},
            </if>
            <if test="companyType != null">
                company_type = #{companyType,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="custName != null">
                cust_name = #{custName,jdbcType=VARCHAR},
            </if>
            <if test="custPhone != null">
                cust_phone = #{custPhone,jdbcType=VARCHAR},
            </if>
            <if test="companyAddr != null">
                company_addr = #{companyAddr,jdbcType=VARCHAR},
            </if>
            <if test="repoTime != null">
                repo_time = #{repoTime,jdbcType=TIMESTAMP},
            </if>
            <if test="checkTime != null">
                check_time = #{checkTime,jdbcType=TIMESTAMP},
            </if>
            <if test="compactTime != null">
                compact_time = #{compactTime,jdbcType=TIMESTAMP},
            </if>
            <if test="abandonTime != null">
                abandon_time = #{abandonTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isPhone != null">
                is_phone = #{isPhone,jdbcType=INTEGER},
            </if>
            <if test="isVisit != null">
                is_visit = #{isVisit,jdbcType=INTEGER},
            </if>
            <if test="isGoldBeans != null">
                is_gold_beans = #{isGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="isCompact != null">
                is_compact = #{isCompact,jdbcType=INTEGER},
            </if>
            <if test="isCompactCheck != null">
                is_compact_check = #{isCompactCheck,jdbcType=INTEGER},
            </if>
            <if test="isMoney != null">
                is_money = #{isMoney,jdbcType=INTEGER},
            </if>
            <if test="isInterestCust != null">
                is_interest_cust = #{isInterestCust,jdbcType=INTEGER},
            </if>
            <if test="compactImg != null">
                compact_img = #{compactImg,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                mark = #{mark,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="abandonReason != null">
                abandon_reason = #{abandonReason,jdbcType=VARCHAR},
            </if>
            <if test="deleteReason != null">
                delete_reason = #{deleteReason,jdbcType=VARCHAR},
            </if>
            <if test="checkRefuseReason != null">
                check_refuse_reason = #{checkRefuseReason,jdbcType=VARCHAR},
            </if>
            <if test="donateGoldBeans != null">
                donate_gold_beans = #{donateGoldBeans,jdbcType=INTEGER},
            </if>
            <if test="relativeId != null">
                relative_id = #{relativeId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.niule.marketing.control.dal.model.CustomerInfo">
        update customer_info
        set user_id = #{userId,jdbcType=INTEGER},
        company_name = #{companyName,jdbcType=VARCHAR},
        company_type = #{companyType,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        cust_name = #{custName,jdbcType=VARCHAR},
        cust_phone = #{custPhone,jdbcType=VARCHAR},
        company_addr = #{companyAddr,jdbcType=VARCHAR},
        repo_time = #{repoTime,jdbcType=TIMESTAMP},
        check_time = #{checkTime,jdbcType=TIMESTAMP},
        compact_time = #{compactTime,jdbcType=TIMESTAMP},
        abandon_time = #{abandonTime,jdbcType=TIMESTAMP},
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
        is_phone = #{isPhone,jdbcType=INTEGER},
        is_visit = #{isVisit,jdbcType=INTEGER},
        is_gold_beans = #{isGoldBeans,jdbcType=INTEGER},
        is_compact = #{isCompact,jdbcType=INTEGER},
        is_compact_check = #{isCompactCheck,jdbcType=INTEGER},
        is_money = #{isMoney,jdbcType=INTEGER},
        is_interest_cust = #{isInterestCust,jdbcType=INTEGER},
        compact_img = #{compactImg,jdbcType=VARCHAR},
        mark = #{mark,jdbcType=VARCHAR},
        price = #{price,jdbcType=DOUBLE},
        abandon_reason = #{abandonReason,jdbcType=VARCHAR},
        delete_reason = #{deleteReason,jdbcType=VARCHAR},
        check_refuse_reason = #{checkRefuseReason,jdbcType=VARCHAR},
        donate_gold_beans = #{donateGoldBeans,jdbcType=INTEGER},
        relative_id = #{relativeId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>